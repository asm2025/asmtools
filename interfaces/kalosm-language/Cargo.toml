[package]
name = "kalosm-language"
version = "0.3.3"
edition = "2021"
description = "A set of pretrained language models "
license = "MIT/Apache-2.0"
repository = "https://github.com/floneum/floneum"
authors = ["Evan Almloff"]
keywords = ["ai", "llm", "llama", "mistral", "nlp"]

[dependencies]
futures-util = "0"
llm-samplers = { workspace = true }
log = "0"
rand = "0"
reqwest = { version = "0", features = ["stream", "json"] }
tokio = { version = "1", features = ["full"] }
slab = { version = "0", features = ["serde"] }
arroy = "0"
heed = "0"
serde = { version = "1", features = ["derive"] }
once_cell = "1"
url = "2"
anyhow = "1"
tracing = "0"
async-trait = "0"
serde_json = "1"
chrono = { version = "0", features = ["serde"] }
readability = { version = "0", default-features = false }
tempfile = "3"
rss = { version = "2", features = ["atom"] }
scraper = { version = "0", features = ["atomic"] }
kalosm-language-model = { workspace = true }
headless_chrome = { version = "1" }
candle-core.workspace = true
candle-nn.workspace = true
tokio-util = { version = "0", features = ["rt"] }
dashmap = "5"
rbert.workspace = true
rphi.workspace = true
kalosm-llama.workspace = true
kalosm-streams.workspace = true
pulldown-cmark = "0"
docx-rs = "0"
pdf = { git = "https://github.com/pdf-rs/pdf" }
pdf_text = { git = "https://github.com/pdf-rs/pdf_text" }
convert_case = "0"
itertools = "0"
tokenizers = { version = "0" }
rustc-hash = "1"
kalosm-sample = { workspace = true }
ego-tree = "0"
image = "0"
meval = "0"
whatlang = "0"
texting_robots = "0"
half = "2"
srx = { version = "0", features = ["from_xml"] }

[features]
metal = ["rphi/metal", "rbert/metal", "kalosm-llama/metal"]
cublas = ["rbert/cuda", "rbert/cudnn", "rphi/cuda", "rphi/cudnn", "kalosm-llama/cuda", "kalosm-llama/cudnn"]
mkl = ["rphi/mkl", "rbert/mkl", "kalosm-llama/mkl"]
remote = ["kalosm-language-model/remote"]

[dev-dependencies]
kalosm = { workspace = true, features = ["language"] }
surrealdb = { version = "1", features = ["kv-rocksdb"] }

[package.metadata.docs.rs]
# Features to pass to Cargo (default: [])
features = ["remote"]
