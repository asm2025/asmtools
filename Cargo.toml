# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html
[package]
name = "rustmix"
version = "0.1.0"
edition = "2021"
description = "rustmix is a Rust library that has some basic utility functions and components."
authors = ["asm <asm2025@outlook.com>"]
license = "MIT"

[dependencies]
anyhow = "1"
chrono = "0"
crossbeam = { version = "0", optional = true }
csv = "1"
dotenv = "0"
file-rotate = { version = "0", optional = true }
futures = "0"
html-entities = { version = "0", optional = true }
lettre = { version = "0", optional = true }
log = "0"
log4rs = { version = "1", optional = true }
once_cell = { version = "1", optional = true }
pyo3 = { version = "0", features = ["auto-initialize", "abi3"], optional = true }
rand = "0"
rayon = { version = "1", optional = true }
regex = { version = "1", optional = true }
reqwest = { version = "0", features = ["blocking", "cookies", "json", "gzip", "deflate", "multipart", "socks", "stream"] }
kalosm = { version = "0", workspace = true, default-features = false, optional = true }
rodio = { version = "0", optional = true }
image = { version = "0", optional = true }
serde = { version = "1", features = ["derive"] }
serde_json = "1"
slog = { version = "2", optional = true }
slog-async = { version = "2", optional = true }
slog-scope = { version = "4", optional = true }
slog-stdlog = { version = "4", optional = true }
slog-term = { version = "2", optional = true }
slog-json = { version = "2", optional = true }
tokio = { version = "1", features = ["full"] }
ua_generator = "0"
url = { version = "2", features = ["serde"] }
urlencoding = "2"

[patch.crates-io]
dioxus-core = { git = "https://github.com/ealmloff/dioxus", branch = "improved-signals" }
dioxus-rsx = { git = "https://github.com/ealmloff/dioxus", branch = "improved-signals" }
dioxus = { git = "https://github.com/ealmloff/dioxus", branch = "improved-signals" }

[workspace]
members = [
	"models/rbert",
    "models/kalosm-llama",
    "models/rphi",
    "models/rwhisper",
    "models/rwuerstchen",
    "models/segment-anything-rs",
    "models/kalosm-ocr",
    "interfaces/kalosm",
    "interfaces/kalosm-common",
    # "interfaces/kalosm-language",
    "interfaces/language-model",
    "interfaces/kalosm-sample",
    "interfaces/kalosm-vision",
    "interfaces/kalosm-sound",
    "interfaces/kalosm-streams",
    "interfaces/kalosm-learning",
    "interfaces/kalosm-learning-macro"
]

[workspace.dependencies]
candle-core = { git = "https://github.com/huggingface/candle", rev = "cdc8b57b5cf28ad92642b076d67e610bdb958b2d" }
candle-nn = { git = "https://github.com/huggingface/candle", rev = "cdc8b57b5cf28ad92642b076d67e610bdb958b2d" }
candle-transformers = { git = "https://github.com/huggingface/candle", rev = "cdc8b57b5cf28ad92642b076d67e610bdb958b2d" }
candle-datasets = { git = "https://github.com/huggingface/candle", rev = "cdc8b57b5cf28ad92642b076d67e610bdb958b2d" }
rustmix = { path = "./lib", version = "0" }
kalosm = { path = "./interfaces/kalosm", version = "0" }
kalosm-sample = { path = "./interfaces/kalosm-sample", version = "0" }
kalosm-common = { path = "./interfaces/kalosm-common", version = "0" }
kalosm-language-model = { path = "./interfaces/language-model", version = "0" }
kalosm-streams = { path = "./interfaces/kalosm-streams", version = "0" }
# kalosm-language = { path = "./interfaces/kalosm-language", version = "0" }
kalosm-sound = { path = "./interfaces/kalosm-sound", version = "0" }
kalosm-vision = { path = "./interfaces/kalosm-vision", version = "0" }
kalosm-learning = { path = "./interfaces/kalosm-learning", version = "0" }
kalosm-learning-macro = { path = "./interfaces/kalosm-learning-macro", version = "0" }
rphi = { path = "./models/rphi", version = "0" }
rbert = { path = "./models/rbert", version = "0" }
kalosm-llama = { path = "./models/kalosm-llama", version = "0" }
rwhisper = { path = "./models/rwhisper", version = "0" }
rwuerstchen = { path = "./models/rwuerstchen", version = "0" }
segment-anything-rs = { path = "./models/segment-anything-rs", version = "0" }
kalosm-ocr = { path = "./models/kalosm-ocr", version = "0" }
llm-samplers = "=0.0.7"

[profile.dist]
inherits = "release"
lto = "thin"

[profile.release]
lto = true
opt-level = 3
debug = false
codegen-units = 1

[profile.dev.package."*"]
opt-level = 3

[features]
default = ["mail", "threading", "log-log4rs"]#, "full"]
full = ["mail", "threading", "log-log4rs", "log-slog", "python", "audio", "vision"]
llamacpp = ["kalosm?/llamacpp"]
metal = ["kalosm?/metal"]
cublas = ["kalosm?/cublas"]
mkl = ["kalosm?/mkl"]
# language = ["kalosm/language"]
audio = ["kalosm/sound", "dep:rodio"]
vision = ["kalosm/vision", "dep:image"]
log-log4rs = ["dep:log4rs"]
log-slog = ["dep:slog", "dep:slog-async", "dep:slog-scope", "dep:slog-stdlog", "dep:slog-term", "dep:slog-json", "dep:file-rotate"]
mail = ["dep:html-entities", "dep:lettre", "dep:once_cell", "dep:regex"]
python = ["dep:pyo3"]
threading = ["dep:crossbeam", "dep:rayon"]

[[bin]]
name = "testapp"
path = "testapp/src/main.rs"

[package.metadata.scripts]
run = "cargo run"
check = "cargo check"
build = "cargo build"
release = "cargo build --release"
features = "cargo tree --features" 
